{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kevinliu/Documents/UNSW/21T1/COMP6080/exam/exam/src/Tictac.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport Square from \"./Square\";\nimport { Patterns } from \"./Patterns\";\n\nconst Tictac = () => {\n  _s();\n\n  const scoreStorage = localStorage.getItem('score');\n  const [board, setBoard] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n  const [player, setPlayer] = useState(\"O\");\n  const [result, setResult] = useState({\n    winner: \"none\",\n    state: \"none\"\n  });\n  useEffect(() => {\n    checkWin();\n    checkIfTie();\n\n    if (player == \"X\") {\n      setPlayer(\"O\");\n    } else {\n      setPlayer(\"X\");\n    }\n  }, [board]);\n  useEffect(() => {\n    if (result.state != \"none\") {\n      alert(`Game Finished! Winning Player: ${result.winner}`);\n      restartGame();\n    }\n  }, [result]);\n\n  const chooseSquare = square => {\n    setBoard(board.map((val, idx) => {\n      if (idx == square && val == \"\") {\n        return player;\n      }\n\n      return val;\n    }));\n  };\n\n  const checkWin = () => {\n    Patterns.forEach(currPattern => {\n      const firstPlayer = board[currPattern[0]];\n      if (firstPlayer == \"\") return;\n      let foundWinningPattern = true;\n      currPattern.forEach(idx => {\n        if (board[idx] != firstPlayer) {\n          foundWinningPattern = false;\n        }\n      });\n\n      if (foundWinningPattern) {\n        setResult({\n          winner: player,\n          state: \"Won\"\n        });\n      }\n    });\n  };\n\n  const checkIfTie = () => {\n    let filled = true;\n    board.forEach(square => {\n      if (square == \"\") {\n        filled = false;\n      }\n    });\n\n    if (filled) {\n      setResult({\n        winner: \"No One\",\n        state: \"Tie\"\n      });\n    }\n  };\n\n  const restartGame = () => {\n    setBoard([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n    setPlayer(\"O\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainpage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tictac Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          val: board[0],\n          chooseSquare: () => {\n            chooseSquare(0);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[1],\n          chooseSquare: () => {\n            chooseSquare(1);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[2],\n          chooseSquare: () => {\n            chooseSquare(2);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          val: board[3],\n          chooseSquare: () => {\n            chooseSquare(3);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[4],\n          chooseSquare: () => {\n            chooseSquare(4);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[5],\n          chooseSquare: () => {\n            chooseSquare(5);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          val: board[6],\n          chooseSquare: () => {\n            chooseSquare(6);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[7],\n          chooseSquare: () => {\n            chooseSquare(7);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[8],\n          chooseSquare: () => {\n            chooseSquare(8);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        localStorage.setItem('score', scoreStorage - 1);\n      },\n      children: \"WIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tictac, \"exEpWM0woRei1+s3htcaRLSXtgs=\");\n\n_c = Tictac;\nexport default Tictac;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tictac\");","map":{"version":3,"sources":["/Users/kevinliu/Documents/UNSW/21T1/COMP6080/exam/exam/src/Tictac.jsx"],"names":["React","useState","useEffect","Square","Patterns","Tictac","scoreStorage","localStorage","getItem","board","setBoard","player","setPlayer","result","setResult","winner","state","checkWin","checkIfTie","alert","restartGame","chooseSquare","square","map","val","idx","forEach","currPattern","firstPlayer","foundWinningPattern","filled","setItem"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { useState, useEffect } from \"react\";\nimport Square from \"./Square\";\nimport { Patterns } from \"./Patterns\";\n\nconst Tictac = () =>{\n  const scoreStorage = localStorage.getItem('score');\n\n  const [board, setBoard] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n  const [player, setPlayer] = useState(\"O\");\n  const [result, setResult] = useState({ winner: \"none\", state: \"none\" });\n  useEffect(() => {\n    checkWin();\n    checkIfTie();\n\n    if (player == \"X\") {\n      setPlayer(\"O\");\n    } else {\n      setPlayer(\"X\");\n    }\n  }, [board]);\n\n  useEffect(() => {\n    if (result.state != \"none\") {\n      alert(`Game Finished! Winning Player: ${result.winner}`);\n      restartGame();\n    }\n  }, [result]);\n\n  const chooseSquare = (square) => {\n    setBoard(\n      board.map((val, idx) => {\n        if (idx == square && val == \"\") {\n          return player;\n        }\n\n        return val;\n      })\n    );\n  };\n\n  const checkWin = () => {\n    Patterns.forEach((currPattern) => {\n      const firstPlayer = board[currPattern[0]];\n      if (firstPlayer == \"\") return;\n      let foundWinningPattern = true;\n      currPattern.forEach((idx) => {\n        if (board[idx] != firstPlayer) {\n          foundWinningPattern = false;\n        }\n      });\n\n      if (foundWinningPattern) {\n        setResult({ winner: player, state: \"Won\" });\n      }\n    });\n  };\n\n  const checkIfTie = () => {\n    let filled = true;\n    board.forEach((square) => {\n      if (square == \"\") {\n        filled = false;\n      }\n    });\n\n    if (filled) {\n      setResult({ winner: \"No One\", state: \"Tie\" });\n    }\n  };\n\n  const restartGame = () => {\n    setBoard([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n    setPlayer(\"O\");\n  };\n\n\n  return(\n    <div className='mainpage'>\n      \n      <h2>Tictac Page</h2>\n      <div className=\"board\">\n        <div className=\"row\">\n          <Square\n            val={board[0]}\n            chooseSquare={() => {\n              chooseSquare(0);\n            }}\n          />\n          <Square\n            val={board[1]}\n            chooseSquare={() => {\n              chooseSquare(1);\n            }}\n          />\n          <Square\n            val={board[2]}\n            chooseSquare={() => {\n              chooseSquare(2);\n            }}\n          />\n        </div>\n        <div className=\"row\">\n          <Square\n            val={board[3]}\n            chooseSquare={() => {\n              chooseSquare(3);\n            }}\n          />\n          <Square\n            val={board[4]}\n            chooseSquare={() => {\n              chooseSquare(4);\n            }}\n          />\n          <Square\n            val={board[5]}\n            chooseSquare={() => {\n              chooseSquare(5);\n            }}\n          />\n        </div>\n        <div className=\"row\">\n          <Square\n            val={board[6]}\n            chooseSquare={() => {\n              chooseSquare(6);\n            }}\n          />\n          <Square\n            val={board[7]}\n            chooseSquare={() => {\n              chooseSquare(7);\n            }}\n          />\n          <Square\n            val={board[8]}\n            chooseSquare={() => {\n              chooseSquare(8);\n            }}\n          />\n        </div>\n      </div>\n      <button onClick={()=>{localStorage.setItem('score', scoreStorage-1)}}>WIN</button>\n    </div>\n  );\n}\nexport default Tictac;"]},"metadata":{},"sourceType":"module"}